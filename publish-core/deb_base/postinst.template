#!/bin/bash

ARCH="$(name -m 2>/dev/null || dpkg --print-architecture || uname -m 2>/dev/null || echo "unknown")"

function initialize_service() {
  local NAME=$1
  chmod a+x /etc/init.d/${NAME}
  update-rc.d ${NAME} defaults
  touch /var/log/${NAME}.log
  chown %%INSTALL_USER%% /var/log/${NAME}.log
}

function start_service() {
  local NAME=$1
  invoke-rc.d ${NAME} start
}

ARTIFACT_HOST="http://bootstrap.mycroft.ai"
ENCLOSURE_VERSION_FILE="/opt/enclosure-version.txt"


# check for previously installed Arduino enclosure version
function check_enclosure_version_file() {
  if [ -f $ENCLOSURE_VERSION_FILE ]; then
    echo "A previous Enclosure installation is present"
    ENCLOSURE_VERSION=`cat ${ENCLOSURE_VERSION_FILE}`
  else
    echo "Enclosure version file is not present"
    exit 1
  fi
}

function upload_hex() {
  if curl --output /dev/null --silent --head --fail "${ARTIFACT_HOST}/artifacts/armhf/enclosure/${ENCLOSURE_VERSION}/enclosure-armhf-${ENCLOSURE_VERSION}.tar.gz"; then

    wget -q --continue "${ARTIFACT_HOST}/artifacts/armhf/enclosure/${ENCLOSURE_VERSION}/enclosure-armhf-${ENCLOSURE_VERSION}.tar.gz"
    mkdir -p /opt/enclosure
    tar -xzf enclosure-armhf-${ENCLOSURE_VERSION}.tar.gz -C /opt/enclosure
    cd /opt/enclosure
    if [ ! -e /opt/avrdude/bin/avrdude ]; then
        ./install-avrdude.sh
    fi
    ./upload.sh
  else
    echo "Enclosure Artifact does not exist"
  fi
}

if [ ${ARCH} = "armhf" ]; then
  check_enclosure_version_file
  upload_hex
fi


initialize_service "mycroft-messagebus"
initialize_service "mycroft-skills"
initialize_service "mycroft-speech-client"

start_service "mycroft-messagebus"
start_service "mycroft-skills"
start_service "mycroft-speech-client"

if [ ${ARCH} = "armhf" ]; then
  start_service "mycroft-enclosure-client"
  initialize_service "mycroft-enclosure-client"
fi